{"version":3,"file":"static/js/624.57b5da8e.chunk.js","mappings":"gKACA,GAAgB,iBAAmB,kCAAkC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,gBAAkB,iCAAiC,QAAU,0B,SCWhR,EARgB,SAACA,GACb,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAgBC,SAC/BJ,EAAMK,SAGf,E,UCEA,EARmB,SAACL,GAChB,OACYC,EAAAA,EAAAA,KAAA,OAAKC,UAAYC,EAAAA,KAAcC,UAC3BH,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACJ,UAAY,SAAAK,GAAO,OAAIA,EAAQC,SAAWL,EAAAA,OAAiBA,EAAAA,IAAY,EAAGM,GAAI,YAAcT,EAAMU,GAAGN,SAAEJ,EAAMW,QAG1I,E,2DCDMC,GAAcC,EAAAA,EAAAA,GAAiB,IAS/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,wBADkBD,EAPL,SAACf,GACpB,OAAOiB,EAAAA,EAAAA,MAAA,QAAMC,SAAUlB,EAAMmB,aAAaf,SAAA,EACtCH,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAUX,KAAM,iBAAiBT,UAAWC,EAAAA,aAAsBoB,SAAU,CAACC,EAAAA,EAAWZ,MAC1GX,EAAAA,EAAAA,KAAA,UAASC,UAAWC,EAAAA,aAAqBC,SAAC,WAElD,IAiCA,EA3BgB,SAACJ,GAEb,IAAIyB,EAAYzB,EAAM0B,QAAQC,MAAMC,KAAI,SAAAC,GAAI,OAAI5B,EAAAA,EAAAA,KAAC6B,EAAU,CAACnB,KAAMkB,EAAKE,SAAUrB,GAAImB,EAAKnB,IAAM,IAC5FsB,EAAehC,EAAM0B,QAAQO,SAASL,KAAI,SAAAM,GAAO,OAAIjC,EAAAA,EAAAA,KAACkC,EAAO,CAAC9B,QAAS6B,EAAQ7B,SAAW,IAO9F,OAAqB,IAAjBL,EAAMoC,QAAyBnC,EAAAA,EAAAA,KAACoC,EAAAA,GAAQ,CAAC5B,GAAI,YAG7CR,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,iBAAyBC,UACrCa,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAAAA,QAAgBC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAqBC,SAChCqB,KAELR,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAAAA,gBAAwBC,SAAA,CACnC4B,GACD/B,EAAAA,EAAAA,KAACa,EAAmB,CAACI,SAfpB,SAACoB,GACdC,QAAQC,IAAIF,GACZtC,EAAMyC,cAAcH,EAASI,eACjC,WAiBJ,E,mBCtBA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAlBkB,SAACC,GACnB,MAAO,CACHnB,QAASmB,EAAMnB,QAEvB,IAEyB,SAACoB,GACtB,MAAO,CACHL,cAAe,SAACC,GACZI,GAASC,EAAAA,EAAAA,IAAwBL,GACrC,EAER,IAOIM,EAAAA,EAFJ,CAGEC,E","sources":["webpack://29may/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsInfo/DialogsInfo.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogscontainer\":\"Dialogs_dialogscontainer__p5NF0\",\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsitems\":\"Dialogs_dialogsitems__8lB0E\",\"item\":\"Dialogs_item__q23mU\",\"active\":\"Dialogs_active__t8cjl\",\"dialogsmessages\":\"Dialogs_dialogsmessages__-k360\",\"message\":\"Dialogs_message__ZEWo0\"};","// import { NavLink } from 'react-router-dom';\nimport classes from '../Dialogs.module.css';\n// import react from 'react';\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}>\n        {props.content}\n        </div>\n    )\n}\n\nexport default Message;","import { NavLink } from 'react-router-dom';\nimport classes from '../Dialogs.module.css';\n// import react from 'react';\n\nconst DialogItem = (props) => {\n    return (\n                <div className={ classes.item }>\n                    <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to={'/dialogs/' + props.id}>{props.name}</NavLink>\n                </div>\n    )\n}\n\nexport default DialogItem;","import classes from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport DialogItem from './DialogsInfo/DialogsInfo';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Field , reduxForm } from \"redux-form\";\nimport { Textarea } from '../common/formsControls/formsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <Field component={Textarea} name={'newMessageBody'}className={classes.main__pc_inp} validate={[required , maxLength50]}/>\n        <button  className={classes.main__pc_but}>Send</button>\n    </form>\n}\n\nconst AddMessageReduxForm = reduxForm({\n    form: 'dialogAddMessageForm'\n}) (AddMessageForm)\n\nconst Dialogs = (props) => {\n\n    let usersData = props.dialogs.users.map(user => <DialogItem name={user.username} id={user.id} />)\n    let messagesData = props.dialogs.messages.map(message => <Message content={message.content} />)\n\n    const onSubmit = (formData) => {\n        console.log(formData)\n        props.messageSender(formData.newMessageBody);\n    }\n\n    if (props.isAuth === false) return <Navigate to={'/login'} />\n\n    return (\n        <div className={classes.dialogscontainer}>\n            <div className={classes.dialogs}>\n                <div className={classes.dialogsitems}>\n                    {usersData}\n                </div>\n                <div className={classes.dialogsmessages}>\n                    {messagesData}\n                    <AddMessageReduxForm onSubmit={onSubmit}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import { addMessageActionCreator } from '../../Redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect';\nimport { compose } from 'redux';\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogs,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        messageSender: (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody))\n        }\n    }\n}\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"names":["props","_jsx","className","classes","children","content","NavLink","navData","isActive","to","id","name","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","usersData","dialogs","users","map","user","DialogItem","username","messagesData","messages","message","Message","isAuth","Navigate","formData","console","log","messageSender","newMessageBody","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}